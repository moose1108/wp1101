type Query{
  chatBox(name1: String, name2: String): ChatBox!
}

type Mutation {
  createMessage(from: String!, to: String!, message: String!): Message!
  createChatBox(name1: String, name2: String): ChatBox! 
}

type Subscription {
  message(from: String!, to: String!): MessageSubscriptionPayload!
}

type ChatBox {   
  id: ID!   
  name: String!   
  messages: [Message!] 
}

type Message { 
  id: ID!
  sender: User!
  body: String!
}

type User{
  id: ID!
  name: String!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
  CLEARED
}

type MessageSubscriptionPayload {
  mutation: MutationType!
  message: Message!
}